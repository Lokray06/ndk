namespace nebula.core
{
    /// Provides constants and static methods for trigonometric, logarithmic,
    /// and other common mathematical functions. This is a native class
    /// that wraps the C++ <cmath> library functionality.
    native class Math
    {
        // --- Constants ---

        /// Represents the ratio of the circumference of a circle to its diameter, specified by the constant Ï€.
        /// Wraps the C++ macro 'M_PI'.
        native public static double PI;

        /// Represents the base of the natural logarithm, specified by the constant e.
        /// Wraps the C++ macro 'M_E'.
        native public static double E;


        // --- Basic Operations ---

        /// Returns the absolute value of an integer.
        native public static int abs(int value);

        /// Returns the absolute value of a double-precision floating-point number.
        native public static double abs(double value);

        /// Returns the larger of two integers.
        native public static int max(int a, int b);

        /// Returns the larger of two double-precision floating-point numbers.
        native public static double max(double a, double b);

        /// Returns the smaller of two integers.
        native public static int min(int a, int b);

        /// Returns the smaller of two double-precision floating-point numbers.
        native public static double min(double a, double b);

        /// Restricts an integer value to be within a specified range.
        native public static int clamp(int value, int min, int max);

        /// Restricts a double value to be within a specified range.
        native public static double clamp(double value, double min, double max);


        // --- Power and Root Functions ---

        /// Returns the square root of a specified number.
        native public static double sqrt(double d);

        /// Returns a specified number raised to the specified power.
        native public static double pow(double base, double exponent);


        // --- Rounding Functions ---

        /// Returns the smallest integer greater than or equal to the specified number.
        native public static double ceil(double d);

        /// Returns the largest integer less than or equal to the specified number.
        native public static double floor(double d);

        /// Rounds a value to the nearest integer.
        native public static double round(double d);


        // --- Logarithmic and Exponential Functions ---

        /// Returns the natural (base e) logarithm of a specified number.
        native public static double log(double d);

        /// Returns the base 10 logarithm of a specified number.
        native public static double log10(double d);

        /// Returns e raised to the specified power.
        native public static double exp(double d);


        // --- Trigonometric Functions ---

        /// Returns the sine of the specified angle.
        native public static double sin(double a);

        /// Returns the cosine of the specified angle.
        native public static double cos(double a);

        /// Returns the tangent of the specified angle.
        native public static double tan(double a);

        /// Returns the angle whose tangent is the quotient of two specified numbers.
        native public static double atan2(double y, double x);
    }
}